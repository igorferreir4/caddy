version: 2.1

executors:
  go-executor:
    docker:
      - image: cimg/go:1.21.5
    resource_class: large

orbs:
  github-cli: circleci/github-cli@2.3.0

jobs:
  build-caddy-linux-amd64:
    executor: go-executor
    steps:
      - checkout
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/caddybuild-linux-amd64.sh
            chmod +x caddy-linux-amd64
            ./caddy-linux-amd64 version
      # - run:
      #     name: Get Binary Version
      #     command: |
      #       CADDY=$(./caddy-linux-amd64 version)
      #       vr="${CADDY}"
      #       echo "version=$( echo $vr | head -n1 | cut -d " " -f1 )" >> $BASH_ENV
      #       echo "tag_name=$( echo $vr | head -n1 | cut -d " " -f1 )" >> $BASH_ENV
      - persist_to_workspace:
          root: .
          paths:
            - caddy-linux-amd64

  build-caddy-linux-arm64:
    executor: go-executor
    steps:
      - checkout
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/caddybuild-linux-arm64.sh
      - persist_to_workspace:
          root: .
          paths:
            - caddy-linux-arm64

  build-caddy-win-amd64:
    executor: go-executor
    steps:
      - checkout
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/caddybuild-win-amd64.sh
      - persist_to_workspace:
          root: .
          paths:
            - caddy-windows-amd64.exe

  build-caddy-win-arm64:
    executor: go-executor
    steps:
      - checkout
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/caddybuild-win-arm64.sh
      - persist_to_workspace:
          root: .
          paths:
            - caddy-windows-arm64.exe       

  create-release:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: Get Binary Version
          command: |
            ls ./artifacts
            ./artifacts/caddy-linux-amd64 version
            CADDY=$(./artifacts/caddy-linux-amd64 version)
            echo "version=$( echo $CADDY | head -n1 | cut -d " " -f1 )" >> $BASH_ENV
      - github-cli/setup
      - run:
          command: |
            gh release create "$version" --title "Binary Update - Caddy "$version"" --notes "Automated release from CircleCI" ./artifacts/*
      - store_artifacts:
          path: ./artifacts

workflows:
  build-caddy:
    jobs:
      - build-caddy-linux-amd64
      - build-caddy-linux-arm64
      - build-caddy-win-amd64
      - build-caddy-win-arm64
      - create-release:
          requires:
            - build-caddy-linux-amd64
            - build-caddy-linux-arm64
            - build-caddy-win-amd64
            - build-caddy-win-arm64