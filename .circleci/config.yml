version: 2.1

executors:
  go-executor:
    docker:
      - image: cimg/go:1.22.0
    resource_class: large

orbs:
  github-cli: circleci/github-cli@2.3.0

jobs:
  build-linux-amd64:
    executor: go-executor
    environment:
      GOCACHE: /home/circleci/gocache
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-amd64-cache-
      - run:
          name: Check cache path
          command: |
            go env GOCACHE
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/build-linux-amd64.sh
            chmod +x caddy-linux-amd64
            ./caddy-linux-amd64 version
            mkdir artifacts
            mv caddy-linux-amd64 ./artifacts
      - save_cache:
          key: linux-amd64-cache-{{ .BuildNum }}
          paths:
            - /home/circleci/gocache
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory in the execution
          # environment which is taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root.
          paths:
            - artifacts

  build-win-amd64:
    executor: go-executor
    environment:
      GOCACHE: /home/circleci/gocache
    steps:
      - checkout
      - restore_cache:
          keys:
            - win-amd64-cache-
      - run:
          name: Check cache path
          command: |
            go env GOCACHE
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/build-win-amd64.sh
            mkdir artifacts
            mv caddy-windows-amd64.exe ./artifacts
      - save_cache:
          key: win-amd64-cache-{{ .BuildNum }}
          paths:
            - /home/circleci/gocache
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory in the execution
          # environment which is taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root.
          paths:
            - artifacts

  build-linux-arm64:
    executor: go-executor
    resource_class: arm.large
    environment:
      GOCACHE: /home/circleci/gocache
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-arm64-cache-
      - run:
          name: Check cache path
          command: |
            go env GOCACHE
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/build-linux-arm64.sh
            chmod +x caddy-linux-arm64
            ./caddy-linux-arm64 version
            mkdir artifacts
            mv caddy-linux-arm64 ./artifacts
      - save_cache:
          key: linux-arm64-cache-{{ .BuildNum }}
          paths:
            - /home/circleci/gocache
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory in the execution
          # environment which is taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root.
          paths:
            - artifacts

  build-win-arm64:
    executor: go-executor
    resource_class: arm.large
    environment:
      GOCACHE: /home/circleci/gocache
    steps:
      - checkout
      - restore_cache:
          keys:
            - win-arm64-cache-
      - run:
          name: Check cache path
          command: |
            go env GOCACHE
      - run:
          name: Get XCADDY
          command: |
            go version
            go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - run:
          name: Build Binaries
          command: |
            sh ./scripts/build-win-arm64.sh
            mkdir artifacts
            mv caddy-windows-arm64.exe ./artifacts
      - save_cache:
          key: win-arm64-cache-{{ .BuildNum }}
          paths:
            - /home/circleci/gocache
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory in the execution
          # environment which is taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root.
          paths:
            - artifacts

  export-to-github:
    executor: go-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Get Binary Version
          command: |
            ls ./artifacts
            ./artifacts/caddy-linux-amd64 version
            CADDY=$(./artifacts/caddy-linux-amd64 version)
            echo "version=$( echo $CADDY | head -n1 | cut -d " " -f1 )" >> $BASH_ENV
            mkdir gitclone
      - github-cli/setup
      - github-cli/clone:
          repo: caddy
          dir: ./gitclone
      - run:
          name: Create Release
          command: |
            cd ./gitclone
            if gh release view $version >/dev/null 2>&1; then
                gh release delete $version --cleanup-tag --yes
            fi
            cd ../
            gh release create $version --title "Binary Update - Caddy "$version"" --notes "Automated release from CircleCI" --repo igorferreir4/caddy ./artifacts/*
  
workflows:
  build-caddy:
    jobs:
      - build-linux-amd64
      - build-win-amd64
      - build-linux-arm64
      - build-win-arm64
      - export-to-github:
          requires:
            - build-linux-amd64
            - build-win-amd64
            - build-linux-arm64
            - build-win-arm64